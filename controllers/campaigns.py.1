# -*- coding: utf-8 -*-
import pickle

def index():
    db.campaign.timestamp.default=request.now
    form=SQLFORM(db.campaign).process()
    rows=db(db.campaign).select()
    return locals()

def show():
    serverlib=local_import('serverprocess')
    server=serverlib.serverprocess
    session.campaign_id=request.args(0,cast=int)
    error_message=session.error_message
    session.error_message=""
    campaign=db.campaign(session.campaign_id)
    details_id=None
    details=db(db.campaign_details.campaign_id==session.campaign_id).select(db.campaign_details.id).first()
    if (details is not None):
        details_id=details.id
    else:
         redirect(URL('index'))
    db.campaign_details.campaign_id.default=request.args(0,cast=int)
    campaign_details=db.campaign_details(details_id)
    is_server_running=False
    server_running_status=None
    server_running=db(db.campaign_details.campaign_id==session.campaign_id).select(db.campaign_details.server_running).first()
    if (server_running is not None):
        server_running_status=server_running.server_running
    a=-2
    if (server_running_status==True):
        pid=db(db.campaign_details.campaign_id==session.campaign_id).select(db.campaign_details.server_PID).first().server_PID
        a=server.check(pid)
        if(a==0):
                is_server_running=True
    details_form=SQLFORM(db.campaign_details,campaign_details,showid=False).process()

    return locals()

def start():
    serverlib=local_import('serverprocess')
    server=serverlib.serverprocess
    if (session.campaign_id is not None):
        #check_if_there_are_running_servers
        definitely_running=None
        running_servers=db(db.campaign_details.server_running==True).select(db.campaign_details.campaign_id)
        for running_server in running_servers:
            pid=db(db.campaign_details.campaign_id==running_server.campaign_id).select(db.campaign_details.server_PID).first().server_PID
            if (server.check(pid)==0):
                definitely_running=running_server
            else:
                db(db.campaign_details.campaign_id==running_server.campaign_id).update(server_running=False)
                db(db.campaign_details.campaign_id==running_server.campaign_id).update(server_PID=-1)
        if (definitely_running is not None):
            server_running_name=db(db.campaign.id==definitely_running).select(db.campaign.name).first().name
            error_message="A server is already running for the following campaign: "+server_running_name
            redirect(URL('show',args=error_message))
        else:
            ip=db(db.campaign_details.campaign_id==session.campaign_id).select(db.campaign_details.server_ip).first().server_ip
            port=db(db.settings.name=="DNS_PORT").select(db.settings.value).first().value
            domain=db(db.campaign_details.campaign_id==session.campaign_id).select(db.campaign_details.server_domain).first().server_domain
            conn_type=db(db.campaign_details.campaign_id==session.campaign_id).select(db.campaign_details.connection_type).first().connection_type
            if (ip is None):
                session.error_message="Please specify the IP address of the local interface to listen on"
                redirect(URL('show',args=session.campaign_id))
            elif (port is None):
                session.error_message="There is an error with the application settings. Please contact the administrator"
                redirect(URL('show',args=session.campaign_id))
                #log specific error
            elif ((domain is None) and (conn_type=="R")):
                session.error_message="In order to start the recursive mode, the authoritative domain needs to be specified"
                redirect(URL('show',args=session.campaign_id))
            else:
                port=int(port)
                proc_storage.dns_servers =server.start(request.folder,ip,port,domain,)
                if (proc_storage.dns_servers is not None):                    
                    server_pid=proc_storage.dns_servers.pid
                    db(db.campaign_details.campaign_id==session.campaign_id).update(server_PID=str(server_pid))
                else:
                    session.error_message="Couldn't launch the server"
                    #do something
                db(db.campaign_details.campaign_id==session.campaign_id).update(server_running=True)
                redirect(URL('show',args=proc_storage.dns_servers))
    else:
        redirect(URL('index'))


def stop():
    server_process=proc_storage.dns_servers
    server_process.terminate()
    server_process.communicate()
   # serverlib=local_import('serverprocess')
    #server=serverlib.serverprocess
   # if (session.campaign_id is not None):
   #     server_process=proc_storage.dns_servers
   #     pid=db(db.campaign_details.campaign_id==session.campaign_id).select(db.campaign_details.server_PID).first().server_PID
   #     server.kill(server_process)
    if (server.check(pid)==-1):
            db(db.campaign_details.campaign_id==session.campaign_id).update(server_PID=-1)
            db(db.campaign_details.campaign_id==session.campaign_id).update(server_running=False)
    redirect(URL('show',args=session.campaign_id))
